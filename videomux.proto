syntax = "proto3";
package videomux;

option go_package = "./";

message Authentication {
    string username = 1;
    string token = 2;
}

// Used for ListResponse
message VideoListItem {
    string name = 1;
    uint32 video_id = 2;
}

// Contains various properties of videos
// (including codec, box, bitrate, framerate)
message VideoProperties {
    string codec = 1;
    string box_type = 2;
    uint32 bitrate = 3;
    uint32 framerate = 4;
}

message SendVideoRequest {
    Authentication auth = 1;
    bytes chunk = 2;
}

message SendVideoResponse {
    string message = 1;
}

message CreateAccountRequest {
    string email = 1;
    string username = 2;
    string password = 3;
}

message CreateAccountResponse {
    string message = 1;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    string message = 1;
    
    // Token is used to identify the user making requests.
    string token = 2;
}

message LogoutRequest {
    Authentication auth = 1;
}

message LogoutResponse {
    string message = 1;
}

message ReceiveVideoRequest {
    Authentication auth = 1;
    uint64 video_id = 2;
}

message ReceiveVideoResponse {
    bytes chunk = 1;
}

message ListVideoRequest {
    Authentication auth = 1;
}

message ListVideoResponse {
    repeated VideoListItem items = 1;
}

message ConvertVideoRequest {
    Authentication auth = 1;
    string video_id = 2;
    VideoProperties config = 3;
}

message ConvertVideoResponse {
    string message = 1;
}

message RenameVideoRequest {
    Authentication auth = 1;
    string video_id = 2;
    string new_name = 3;
}

message RenameVideoResponse {
    string message = 1;
}

message GetVideoPropertiesRequest {
    Authentication auth = 1;
    string video_id = 2;
}

message GetVideoPropertiesResponse {
    VideoProperties properties = 1;
}

service VideoMux {
    rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse);
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc Logout (LogoutRequest) returns (LogoutResponse);
    rpc SendVideo (stream SendVideoRequest) returns (SendVideoResponse);
    rpc ReceiveVideo (ReceiveVideoRequest) returns (stream ReceiveVideoResponse);
    rpc ListVideos (ListVideoRequest) returns (ListVideoResponse);
    rpc ConvertVideo (ConvertVideoRequest) returns (ConvertVideoResponse);
    rpc RenameVideo (RenameVideoRequest) returns (RenameVideoResponse);
    rpc GetVideoProperties (GetVideoPropertiesRequest) returns (GetVideoPropertiesResponse);
}
